import React from 'react';
import { connect } from "react-redux";
import './style.css';
import {deletePost} from '../actions/index';
import { useNavigate } from 'react-router-dom';
import { useParams } from "react-router-dom";


const Post = (props) => {

    // FOR REDIRECT
    let navigate = useNavigate();

    // FOR GETTING PARAMS FROM URL
    const params = useParams();


    const postToDisplay = (props.posts).find(post => post.id === params.post_id)

    return(
            <div className='container' style={{textAlign:"center"}}>
                <h4>{postToDisplay.title}</h4>
                <p>{postToDisplay.body}</p>
                <button onClick={()=>handleClick((props.posts).findIndex(post=> post.id === postToDisplay.id), props, navigate)}>DELETE POST</button>
            </div>
        )
}

const handleClick = (postID, props, navigate) => {

    props.deletePost(postID);

    // REDIRECT TO HOME.JS BACK
    navigate("/");
    
}


const mapStateToProps = (state) => {

    return{

        posts: state.posts
    }
}

const mapDispatchToProps = (dispatch) => {

    return {

        deletePost : (postID) => dispatch(deletePost(postID))
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(Post)






// class Post extends React.Component{



//     render(){

//         // console.log(this.props)

//         return(

//             <>
            
            
            
//             </>
//         )
//     }
// }


// export default Post;




// this.props === ownProps : so we can write also automatically into render : this.props.match....
// without using ownProps !
// We use this App redux===store the props in STORE + we want to pass data from home.js to here directly!
// 'ownProps' = If your component needs the data from its own props to retrieve data from the store.
// This argument will contain all of the props given to the wrapper component that was generated by connect.
// const mapStateToProps = (state, ownProps) => {

//   let id = ownProps.match.params.post_id;

//   return {

//     post: state.posts.find(post => post.id === id)

//   }
// }

